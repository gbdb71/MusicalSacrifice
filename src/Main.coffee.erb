#= require Splash

MusicalSacrifice = window.MusicalSacrifice

Splash = MusicalSacrifice.Splash

class Main extends Phaser.State
  constructor:(@parent='')->

  run:(debug = false)->
    mode = if debug then Phaser.CANVAS else Phaser.AUTO
    new Phaser.Game(896, 504, mode, @parent, this)

  create: ->
    @dudesById = {}
    @myId = '555'

    @game.physics.startSystem(Phaser.Physics.ARCADE)

    @dudes = @game.add.group()
    @dudes.enableBody = true
    @player = @addDude(@myId, 0, 0, 'dude')

    @game.physics.arcade.enable(@dudes)
    console.log(@dudes)
    @cursors = @game.input.keyboard.createCursorKeys()

  addDude:(dudeId, x, y)->

    dude = @dudes.create(x, y, 'dude')
    @dudesById[dudeId] = dude
    dude

  updateDude:(dudeId, x, y)->
    @dudes[dudeId].body.velocity.x = 0
    @dudes[dudeId].body.velocity.y = 0
    @dudes[dudeId].body.x = x
    @dudes[dudeId].body.y = y

  update:->
    @player.body.velocity.x = 0

    if (@cursors.left.isDown)
      @player.body.velocity.x = -150
      @player.animations.play('left')
    else if (@cursors.right.isDown)
      @player.body.velocity.x = 150
      @player.animations.play('right')
    else
      @player.animations.stop()
      @player.frame = 4

    @sendUpdate(@myId, @player.body.x, @player.body.y)

  getUpdate:(data) ->
    console.log("Got some dude data: ", data)

  sendUpdate:(id, x, y) ->
    console.log("Need to tell everyone that dude:#{id} is at #{x}, #{y}")

  destroy:->

  preload:->
    @game.load.image('dude', 'assets/dude.png')

  loadRender:->

  render:->

  ready:=>

  startGame:=>

MusicalSacrifice.Main = Main
